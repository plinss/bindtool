---
image: python:3.7-bullseye


.setup:
  before_script:
    - source .gitlab-ci.env


.depends:
  before_script:
    - apt-get update
    - apt-get install --yes ${DEPENDS}
  rules:
    - if: ${DEPENDS}


stages:
  - lint
  - test
  - package
  - deploy


flake8:
  stage: lint
  before_script:
    - !reference [.setup, before_script]
    - !reference [.depends, before_script]
    - pip install -e ".[dev]"
  script:
    - flake8 src


mypy:
  stage: lint
  before_script:
    - !reference [.setup, before_script]
    - !reference [.depends, before_script]
    - pip install -e ".[dev]"
  script:
    - mypy src


test_3.7:
  stage: test
  image: python:3.7-bullseye
  before_script:
    - !reference [.setup, before_script]
    - !reference [.depends, before_script]
    - pip install -e ".[test]"
    - chmod a+x test.py
  script:
    - ./test.py
  rules:
    - exists:
        - test.py


test_3.8:
  stage: test
  image: python:3.8-bullseye
  before_script:
    - !reference [.setup, before_script]
    - !reference [.depends, before_script]
    - pip install -e ".[test]"
    - chmod a+x test.py
  script:
    - ./test.py
  rules:
    - exists:
        - test.py


test_3.9:
  stage: test
  image: python:3.9-bullseye
  before_script:
    - !reference [.setup, before_script]
    - !reference [.depends, before_script]
    - pip install -e ".[test]"
    - chmod a+x test.py
  script:
    - ./test.py
  rules:
    - exists:
        - test.py


test_3.10:
  stage: test
  image: python:3.10-bullseye
  before_script:
    - !reference [.setup, before_script]
    - !reference [.depends, before_script]
    - pip install -e ".[test]"
    - chmod a+x test.py
  script:
    - ./test.py
  rules:
    - exists:
        - test.py


test_3.11:
  stage: test
  image: python:3.11-bullseye
  before_script:
    - !reference [.setup, before_script]
    - !reference [.depends, before_script]
    - pip install -e ".[test]"
    - chmod a+x test.py
  script:
    - ./test.py
  rules:
    - exists:
        - test.py


package:
  stage: package
  image: docker.linss.com/docker-images/python-build:main
  script:
    - python -m build --no-isolation --outdir dist
  artifacts:
    paths:
      - dist
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9-\.]+)?$/'


deploy:
  stage: deploy
  before_script:
    - !reference [.setup, before_script]
    - pip install --upgrade wheel twine
  script:
    - python -m twine upload --username __token__ --password ${PYPI_API_TOKEN} --non-interactive --disable-progress-bar --repository-url ${PYPI_REPOSITORY_URL} dist/*
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9-\.]+)?$/'
